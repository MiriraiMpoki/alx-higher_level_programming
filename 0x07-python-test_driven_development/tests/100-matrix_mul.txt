matrix_mul module
-----------------

Importing "matrix_mul"
----------------------

Import file
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Test for valid case
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

Test for valid case
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

Test for first argument not being a list
>>> matrix_mul("[]", [[], []])
Traceback (most recent call last):
TypeError: m_a must be a list

Test for second argument not being a list
>>> matrix_mul([[], []], "[]")
Traceback (most recent call last):
TypeError: m_b must be a list

Test for first argument not being a list of lists
>>> matrix_mul(["a", "b"], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

Test for second argument not being a list of lists
>>> matrix_mul([[1, 2], [3, 4]], ["a", "b"])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

Test for first argument being empty
>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a can't be empty

Test for second argument being empty
>>> matrix_mul([[1, 2], [3, 4]], [[], []])
Traceback (most recent call last):
ValueError: m_b can't be empty

Test for first argument containing non integer elements
>>> matrix_mul([["1", 2], [3, 4]], [[5, 6], [7, 8]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

Test for second argument containing non integer elements
>>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, "8"]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

Test for first argument not being a rectangle
>>> matrix_mul([[1, 2], [3, 4, 9]], [[5, 6], [7, 8]])
Traceback (most recent call last):
TypeError: each row of m_a must should be of the same size

Test for second argument not being a rectangle
>>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8, 9]])
Traceback (most recent call last):
TypeError: each row of m_b must should be of the same size

Test for matrices that cannot be multiplied
>>> matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

Test for missing 1 argument
>>> matrix_mul([[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Test for no arguments
>>> matrix_mul()
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Test for 2x3 matrix vs 3x2
>>> matrix_mul([[1, 2], [3, 4], [3, 4]],  [[5, 6, 1], [7, 8, 2]])
[[19, 22, 5], [43, 50, 11], [43, 50, 11]]
